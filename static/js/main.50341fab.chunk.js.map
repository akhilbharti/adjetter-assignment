{"version":3,"sources":["components/GithubUser.js","components/MainSearchBarPage.js","action/contactAction.js","action/actionTypes.js","header.js","AppCopy.js","reducer/index.js","reducer/contactReducer.js","store/configureStore.js","index.js","../../redux/es/redux.js"],"names":["GithubUser","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","name","url","response","i","obj","newArray","wrap","_context","prev","next","match","params","concat","Axios","get","sent","data","length","title","description","language","createdAt","created_at","state","details","slice","push","setState","currentUser","isloading","stop","createTable","table","react_default","createElement","key","uuid","children","className","Component","MainSearchBarPage","handleChange","e","query","target","value","handleSubmit","contact","createContact","deleteContact","index","preventDefault","repoUser","_this2","console","log","react_router_dom","to","onClick","_this3","placeholder","type","onChange","id","contacts","map","listView","connect","ownProps","dispatch","contactAction","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","withRouter","classes","AppBar","position","Toolbar","Typography","variant","history","location","pathname","Button","color","goBack","AppCopy","header","react_router","exact","path","render","routeProps","components_GithubUser","component","MainSearchBar","combineReducers","arguments","undefined","action","toConsumableArray","assign","filter","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","store","createStore","rootReducer","applyMiddleware","reduxThunk","ReactDOM","es","src_AppCopy","document","getElementById","__webpack_require__","d","__webpack_exports__","bindActionCreators","symbol_observable__WEBPACK_IMPORTED_MODULE_0__","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","reducer","preloadedState","enhancer","_ref2","Error","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","indexOf","splice","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","unsubscribe","getUndefinedStateErrorMessage","actionType","String","reducers","reducerKeys","keys","finalReducers","shapeAssertionError","finalReducerKeys","forEach","assertReducerShape","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","actionCreators","boundActionCreators","_defineProperty","defineProperty","enumerable","configurable","writable","_len","funcs","Array","arg","reduce","b","middlewares","_dispatch","middlewareAPI","chain","middleware","source","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread"],"mappings":"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","file":"static/js/main.50341fab.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import { Redirect } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport uuid from \"uuid/v4\";\n// import Spinner from \"../Spinner-1s-200px.gif\";\nclass GithubUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: [],\n      name: \"\",\n      currentUser: \"\",\n      uuid: uuid(),\n      isloading: false\n    };\n  }\n\n  componentDidMount = async () => {\n    const name = this.props.match.params.name;\n    const url = `https://api.github.com/users/${name}/repos`;\n    const response = await Axios.get(url);\n    // console.log(response.data);\n    for (let i = 0; i < response.data.length; i++) {\n      const obj = {\n        title: response.data[i].name,\n        description: response.data[i].description,\n        language: response.data[i].language,\n        createdAt: response.data[i].created_at\n      };\n      const newArray = this.state.details.slice(); // Create a copy\n      newArray.push(obj); // Push the object\n      this.setState({ details: newArray, currentUser: name, isloading: false });\n    }\n  };\n\n  createTable = () => {\n    let table = [];\n    table.push(\n      <tr key={this.state.uuid}>\n        <td>Title</td>\n        <td>Description</td>\n        <td>Language</td>\n        <td>Created AT</td>\n      </tr>\n    );\n    for (let i = 0; i < this.state.details.length; i++) {\n      let children = [];\n      children.push(\n        <td className=\"td\">{this.state.details[i].title}</td>,\n        <td className=\"td\">{this.state.details[i].description}</td>,\n        <td className=\"td\">{this.state.details[i].language}</td>,\n        <td className=\"td\">{this.state.details[i].createdAt}</td>\n      );\n\n      table.push(<tr key={i}>{children}</tr>);\n    }\n    return table;\n  };\n  render() {\n    const name = this.props.match.params.name;\n\n    return (\n      <div>\n        <div>\n          <h1> hello {name}</h1>\n          <table className=\"table\">\n            <tbody>{this.createTable()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GithubUser;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as contactAction from \"../action/contactAction\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nclass MainSearchBarPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { query: \"\", details: [] };\n  }\n  handleChange = e => {\n    this.setState({ query: e.target.value });\n  };\n  handleSubmit = e => {\n    // e.preventDefault();\n    let contact = {\n      query: this.state.query\n    };\n    this.props.createContact(contact);\n  };\n\n  deleteContact = (e, index) => {\n    e.preventDefault();\n    this.setState({ repoUser: [] });\n    this.props.deleteContact(index);\n  };\n\n  listView(data, index) {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col\">\n            {console.log(this.state.query)}\n            <li key={index} className=\"nav-item\">\n              <Link to={`/adjetter/${data.query}`}>\n                <h5>{data.query}</h5>\n              </Link>\n            </li>\n          </div>\n          <div className=\"col\">\n            <button\n              onClick={e => this.deleteContact(e, index)}\n              className=\"btn btn-danger\"\n            >\n              <i className=\"fa fa-remove\" />\n            </button>\n\n            <ul />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"wrap\">\n        <h1>Search for user</h1>\n        <div className=\"row\">\n          <div className=\"col\">\n            <input\n              className=\"form-control\"\n              placeholder=\"Enter Github User\"\n              type=\"text\"\n              value={this.state.query}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"col\">\n            <Link\n              to={`/adjetter/${this.state.query}`}\n              onClick={this.handleSubmit}\n              className=\"btn btn-primary\"\n            >\n              Search\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"main-container\">\n          {\n            <ul id=\"slide-out\" className=\"side-nav fixed\">\n              {this.props.contacts.map((query, i) => this.listView(query, i))}\n            </ul>\n          }\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    contacts: state.contacts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createContact: contact => dispatch(contactAction.createContact(contact)),\n    deleteContact: index => dispatch(contactAction.deleteContact(index))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSearchBarPage);\n","import * as actionTypes from \"./actionTypes\";\n\nexport const createContact = contact => {\n  return {\n    type: actionTypes.CREATE_NEW_CONTACT,\n    contact: contact\n  };\n};\n\nexport const deleteContact = id => {\n  return {\n    type: actionTypes.REMOVE_CONTACT,\n    id: id\n  };\n};\n","export const GET_ALL_CONTACTS = \"GET_ALL_CONTACTS\";\nexport const CREATE_NEW_CONTACT = \"CREATE_NEW_CONTACT\";\nexport const REMOVE_CONTACT = \"REMOVE_CONTACT\";\nexport const GITHUB_REPO = \"GITHUB_REPO\";\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { withRouter } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nfunction Header(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Adjetter Assignment\n          </Typography>\n          {props.history.location.pathname === \"/\" ? (\n            <Button color=\"inherit\">Demo</Button>\n          ) : (\n            <Button color=\"inherit\" onClick={props.history.goBack}>\n              Go Back\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withRouter(Header);\n","import React, { Component } from \"react\";\nimport GithubUser from \"./components/GithubUser\";\nimport MainSearchBar from \"./components/MainSearchBarPage\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./header\";\n\nclass AppCopy extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route\n            exact\n            path=\"/adjetter/:name\"\n            render={routeProps => <GithubUser {...routeProps} />}\n          />\n          <Route exact path=\"/\" component={MainSearchBar} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default AppCopy;\n","import { combineReducers } from \"redux\";\nimport contacts from \"./contactReducer\";\n\nexport default combineReducers({\n  contacts: contacts\n});\n","import * as actionTypes from \"../action/actionTypes\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_NEW_CONTACT:\n      return [...state, Object.assign({}, action.contact)];\n    case actionTypes.REMOVE_CONTACT:\n      return state.filter((data, i) => i !== action.id);\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducer/\";\nimport reduxThunk from \"redux-thunk\";\n\n//redux dev tool integration\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancer(applyMiddleware(reduxThunk))\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./AppCopy\";\nimport { Provider } from \"react-redux\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\n// import registerServiceWorker from \"./registerServiceWorker\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n// registerServiceWorker();\n\n// ReactDOM.render(\n//   <BrowserRouter>\n//     <App />\n//   </BrowserRouter>,\n//   document.getElementById(\"root\")\n// );\n","import $$observable from 'symbol-observable';\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\n\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\n\n\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };"],"sourceRoot":""}